# only these branches will be run through CI:
#   - master
#   - staging
#   - testing
#   - dev
#
# The runner will use following pre-defined variables for build:
#   - CI_PROJECT_NAME: project name
#   - CI_COMMIT_REF_NAME: branch/tag name
#   - CI_REGISTRY: the address of GitLab's Container Registry
#   - CI_JOB_TOKEN: Token used for authenticating with the GitLab Container Registry
#   - GCR_REGISTRY: Google Docker Registry address
#   - GCR_ACCOUNT_KEY: Google Docker Registry key
#   - K8S_API_SERVER: choose predefined variables among K8S_API_SERVER_${MASTER, STAGING, TESTING, DEV}
#   - K8S_API_TOKEN: choose predefined variables among K8S_API_TOKEN_${MASTER, STAGING, TESTING, DEV}
#   - MAVEN_PULL_USER: maven download account
#   - MAVEN_PULL_PASSWORD: maven download account password
#   - MAVEN_PUSH_USER: maven upload account
#   - MAVEN_PUSH_PASSWORD: maven upload account password
#
# If the CI_PROJECT_NAME is "transfer", the RELEASE_VERSION is "v2", CI_COMMIT_REF_NAME is "master", the
# generated kubernetes deployment name would be like:
#     transfer-v2-master
# If the CI_PROJECT_NAME is "api", the RELEASE_VERSION is "v2", CI_COMMIT_REF_NAME is "testing", the
# generated kubernetes deployment name would be like:
#     transfer-v2-testing
#
# only variables in the "editable area" should be modified.

variables:
 # {{ editable area begin }}
  RELEASE_VERSION: v2
  # {{ editable area end }}
  
  K8S_API_SERVER: K8S_API_SERVER_${CI_COMMIT_REF_NAME}
  K8S_API_TOKEN: K8S_API_TOKEN_${CI_COMMIT_REF_NAME}
  CONTAINER_IMAGE: ${CI_REGISTRY}/exchange/code/${CI_PROJECT_NAME}
  CONTAINER_IMAGE_FULL: ${CI_REGISTRY}/exchange/code/${CI_PROJECT_NAME}:${CI_COMMIT_REF_NAME}
  DEPLOYMENT_NAME: ${CI_PROJECT_NAME}-${RELEASE_VERSION}-${CI_COMMIT_REF_NAME}

  # do not modify variables below
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: 127.0.0.1:2375

services:
  - docker:dind

stages:
  - setup
  - test
  - build
  - release
  - deploy
build:
  stage: build
  only:
    - master
    - staging
    - testing
    - dev
    - tw
    - devny
  image: java
  variables:
    GRADLE_HOME: ".gradle/"
    GRADLE_PROJECT_HOME: ".gradle/current/"
  cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - ${GRADLE_HOME}
      - ${GRADLE_PROJECT_HOME}
  script:
    - ./gradlew --no-daemon -g ${GRADLE_HOME} --project-cache-dir ${GRADLE_PROJECT_HOME}
      -PmavenPullUser=$MAVEN_PULL_USER -PmavenPullPassword=$MAVEN_PULL_PASSWORD
      -PmavenPushUser=$MAVEN_PUSH_USER -PmavenPushPassword=$MAVEN_PUSH_PASSWORD
      -x test build
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    paths:
      - build/libs
    expire_in: 3 month

release:
  stage: release
  only:
    - master
    - staging
    - testing
    - dev
    - tw
    - devny
  image: docker:18.04.0-ce-git
  script:
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    - docker build -t ${CONTAINER_IMAGE_FULL} .
    - docker push ${CONTAINER_IMAGE_FULL}
    - docker pull ${CONTAINER_IMAGE_FULL} | grep sha256 | cut -d ' ' -f 2 > hash
  artifacts:
    name: "imagehash"
    paths:
      - hash
    expire_in: 3 month

deploy:
  stage: deploy
  only:
    - master
    - staging
    - testing
    - dev
    - tw
    - devny
  image: lachlanevenson/k8s-kubectl:v1.8.4
  script:
    - K8S_API_SERVER="$(echo ${K8S_API_SERVER}|tr '[:lower:]' '[:upper:]')" && 
      K8S_API_TOKEN="$(echo ${K8S_API_TOKEN}|tr '[:lower:]' '[:upper:]')" &&
      eval K8S_API_SERVER=$(echo \$$K8S_API_SERVER) &&
      eval K8S_API_TOKEN=$(echo \$$K8S_API_TOKEN) &&
    - >-
      export imagehash=$( cat hash ) && echo $imagehash &&
      kubectl --insecure-skip-tls-verify
      --server="${K8S_API_SERVER}" --token="${K8S_API_TOKEN}"
      patch deployment "${DEPLOYMENT_NAME}"
      --patch="
      {\"spec\":
        {\"template\":
          {\"spec\":
            {\"containers\":
              [{\"name\":\"${DEPLOYMENT_NAME}\", \"image\":\"${CONTAINER_IMAGE}@${imagehash}\"}]
            }
          }
        }
      }"

